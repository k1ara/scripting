services:
  ocsinventory:
    image: ocsinventory/ocsinventory-docker-image:2.12.3
    container_name: ocs-inventory
    restart: always
    networks:
      - mi-red

    ports:
      - "8080:80"     # HTTP  -> http://NAS:8080/ocsreports
      - "8443:443"    # HTTPS -> https://NAS:8443/ocsreports
      
    devices:
      - /dev/urandom:/dev/urandom
      - /dev/random:/dev/random

    environment:
      TZ: America/Panama
      OCS_DB_SERVER: mariadb  # ðŸ”’ cÃ¡mbialo si usas otro host o IP
      OCS_DB_PORT: "3306"
      OCS_DB_NAME: ocsweb
      OCS_DB_USER: ocs
      OCS_DB_PASS: ocs24cfe
    volumes:
      - ./ocs-data:/var/lib/ocsinventory-reports
      - ./ocs-logs:/var/log/ocsinventory-server
      # - ./ssl-rand.conf:/etc/apache2/conf-available/ssl-rand.conf:ro
      # - ./ocsinventory-server.conf:/etc/apache2/conf-enabled/ocsinventory-server.conf:ro
      # - ./ocsinventory-reports.conf:/etc/apache2/conf-enabled/ocsinventory-reports.conf:ro
      # - ./apache-ssl.conf:/etc/apache2/sites-available/default-ssl.conf:ro
      # - ./000-default.conf:/etc/apache2/sites-available/000-default.conf:ro
      # - ./zz-ocsinventory-restapi.conf:/etc/apache2/conf-available/zz-ocsinventory-restapi.conf:ro
      # - ./z-ocsinventory-server.conf:/etc/apache2/conf-available/z-ocsinventory-server.conf:ro
      # - ./dbconfig.inc.php:/usr/share/ocsinventory-reports/ocsreports/dbconfig.inc.php:ro
      # - ./apache2.conf:/etc/apache2/apache2.conf:ro
    # command: >
    #   /bin/bash -lc "
    #     set -e;
    #     # Instala haveged si no existe (Debian/Alpine)
    #     if ! command -v haveged >/dev/null 2>&1; then
    #       if command -v apt-get >/dev/null 2>&1; then
    #         apt-get update && apt-get install -y --no-install-recommends haveged && rm -rf /var/lib/apt/lists/*;
    #       elif command -v apk >/dev/null 2>&1; then
    #         apk add --no-cache haveged;
    #       fi
    #     fi;
    #     # Lanza haveged para alimentar /dev/random y /dev/urandom
    #     haveged -w 1024 -F -v 1 &

    #     a2dismod ssl || true;
    #     a2dismod unique_id || true;
    #     a2dismod session || true;
    #     a2dismod session_crypto || true;

    #     apachectl -t;
    #     apachectl -DFOREGROUND
    #   "
networks:
  mi-red:
    external: true
